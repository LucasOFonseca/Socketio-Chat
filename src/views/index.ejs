<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD"
      crossorigin="anonymous"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
      crossorigin="anonymous"
    ></script>
    <link rel="stylesheet" href="styles/index.css" />

    <title>Simple Chat</title>
  </head>

  <body>
    <div id="chat"></div>

    <div id="set-user-container" class="control-container border-top">
      <div>
        <input
          type="text"
          name="username"
          id="username"
          class="form-control"
          placeholder="Usuário"
        />

        <button class="btn btn-success" onclick="setUser()">entrar</button>
      </div>

      <p id="error" style="color: #df3f3f; margin: 0; display: none"></p>
    </div>

    <div
      id="message-container"
      class="control-container border-top"
      style="display: none"
    >
      <input
        type="text"
        name="message"
        id="message"
        class="form-control"
        placeholder="Mensagem"
      />

      <button class="btn btn-success" onclick="sendMessage()">enviar</button>
    </div>
  </body>

  <script
    src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.6.0/socket.io.js"
    integrity="sha512-rwu37NnL8piEGiFhe2c5j4GahN+gFsIn9k/0hkRY44iz0pc81tBNaUN56qF8X4fy+5pgAAgYi2C9FXdetne5sQ=="
    crossorigin="anonymous"
    referrerpolicy="no-referrer"
  ></script>

  <script>
    let socket;
    let username;
    let lastMessageId;

    function setUser() {
      username = document.getElementById('username').value.trim();

      if (username) {
        document.getElementById('message-container').style.display = 'flex';
        document.getElementById('set-user-container').style.display = 'none';

        socket = io('http://localhost:3000', {
          query: {
            username,
          },
        });

        socket.on('user-connected', () => {
          document.getElementById('message-container').style.display = 'flex';
          document.getElementById('set-user-container').style.display = 'flex';
        });

        socket.on('showMessage', ({ message, username: user, color, id }) => {
          const div = document.getElementById('chat');
          const messageElement = document.createElement('div');
          messageElement.setAttribute('class', 'message rounded-1 shadow');

          if (id === socket.id) {
            lastMessageId = '';

            messageElement.classList.add('self-message');

            messageElement.innerHTML = `<p style="margin-bottom: 0">${message}</p>`;
          } else {
            if (lastMessageId === id) {
              messageElement.classList.add('grouped-message');
            } else {
              lastMessageId = id;
            }

            messageElement.classList.add('other-message');

            messageElement.innerHTML = `
              <p style="color: ${color}; font-weight: 700; margin-bottom: 8px">${user}</p>
              <p style="margin-bottom: 0">${message}</p>`;
          }

          div.appendChild(messageElement);

          window.scrollTo(0, document.body.scrollHeight);
        });

        socket.on('newUser', (user) => {
          const div = document.getElementById('chat');
          const messageElement = document.createElement('div');
          messageElement.setAttribute(
            'class',
            'message rounded-1 shadow new-user'
          );

          messageElement.innerHTML = `<strong>${user}</strong> entrou na conversa`;

          div.appendChild(messageElement);

          window.scrollTo(0, document.body.scrollHeight);
        });

        socket.on('userDisconnected', (user) => {
          const div = document.getElementById('chat');
          const messageElement = document.createElement('div');
          messageElement.setAttribute(
            'class',
            'message rounded-1 shadow disconnected'
          );

          messageElement.innerHTML = `<strong>${user}</strong> saiu da conversa`;

          div.appendChild(messageElement);

          window.scrollTo(0, document.body.scrollHeight);
        });
      } else {
        const error = document.getElementById('error');
        error.style.display = 'block';
        error.innerText = 'Informe um usuário para continuar';
      }
    }

    function sendMessage() {
      const message = document.getElementById('message').value.trim();

      if (message) {
        socket.emit('message', { message, username });

        document.getElementById('message').value = '';
      }
    }

    document.addEventListener('keydown', (e) => {
      if (e.key === 'Enter') {
        if (username) {
          sendMessage();
        } else {
          setUser();
        }
      }
    });
  </script>
</html>
